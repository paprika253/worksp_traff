package admin_panel;

import java.awt.Graphics;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.Insets;
import java.awt.Toolkit;
import java.io.IOException;
import java.net.MalformedURLException;

import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JToolBar;

import org.json.simple.JSONObject;



public abstract class IspectorTab extends JPanel
{
	/**
	 * 
	 */
	private static final long	serialVersionUID	= -2668583222833874636L;
	private GridBagConstraints	c;
	public MainPanel			inspector;
	private Image				img;
	private int					completed			= 0;

	public IspectorTab(JTabbedPane tp, MainPanel inspector)
	{
		super();
		this.img = Toolkit.getDefaultToolkit().createImage(MainPanel.class.getResource("images/fon1.png"));
		this.inspector = inspector;
		tp.add(new JScrollPane(this), getTitle());
		setLayout(new GridBagLayout());
		c = new GridBagConstraints();
		c.anchor = GridBagConstraints.NORTHWEST;
		c.fill = GridBagConstraints.BOTH;
		c.insets = new Insets(1, 25, 1, 25);
	}

	public void paintComponent(Graphics g)
	{
		super.paintComponent(g);
		g.drawImage(img, 0, 0, this);
	}

	public abstract void redr(JSONObject jo, GridBagConstraints c);

	public abstract String getTitle();

	public abstract String[] getHeader();

	public abstract String getAction();

	public abstract void addSend(JSONObject send);

	public abstract void toolBarRedr(JToolBar tb);

	
	public void redraw() throws MalformedURLException, IOException
	{
		/*
		JSONObject send = new JSONObject();
		send.put("action", getAction());
		addSend(send);
		// System.out.println("send="+send);
		String otvet = null;
		try
		{
			otvet = inspector.getServerAccess().communications(send);
		} catch (java.lang.NullPointerException e)
		{
			JOptionPane.showMessageDialog(null, Lang.put("No capture servers available#Нет доступных серверов захвата"),
					Lang.put("Error#Ошибка"), JOptionPane.ERROR_MESSAGE);
			System.exit(-7);
		} catch (java.net.SocketException e)
		{
			return;
		}
		JSONObject jo;
		try
		{
			jo = (JSONObject) JSONValue.parseWithException(otvet);
			int status = Integer.parseInt(jo.get("status").toString());
			if (status == 0)
			{
				// System.err.println(getAction() + ":" + otvet);
				return;
			}
		} catch (ParseException | java.lang.NullPointerException e)
		{
			return;
		}
		*/
		removeAll();
		c.gridx = 0;
		c.gridy = 0;
		c.gridwidth = getHeader().length;
		add(new JLabel("<html><h2>" + getTitle()), c);
		c.gridwidth = 1;
		c.gridy++;
		for (String x : getHeader())
		{
			add(new JLabel("<html><b>" + x), c);
			c.gridx++;
		}
		c.gridx = 0;
		c.gridy++;
		//redr(jo, c);
		revalidate();
		repaint();
	}

	public void toolBarRedraw(JToolBar tb)
	{
		toolBarRedr(tb);
		tb.revalidate();
		tb.repaint();
	}

	

	public int isCompleted()
	{
		return completed;
	}

	public void setCompleted(int skip)
	{
		completed = skip;
	}

	public void reduceCompleted()
	{
		completed--;
	}
}